{"ast":null,"code":"var _jsxFileName = \"/Users/ainneoum/Projects/grm-test/src/components/SectionSix/CarouselConfig.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport Carousel from \"nuka-carousel\"; // CONFIG DO NOT REMOVE\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = [\"7732bb\", \"047cc0\", \"00884b\", \"e3bc13\", \"db7c00\"]; // eslint-disable-next-line complexity\n\nconst CarouselConfig = () => {\n  _s();\n\n  const [animation, setAnimation] = useState(undefined);\n  const [autoplay, setAutoplay] = useState(false);\n  const [cellAlign, setCellAlign] = useState(\"left\");\n  const [heightMode, setHeightMode] = useState(\"max\");\n  const [length, setLength] = useState(colors.length);\n  const [scrollMode, setScrollMode] = useState(\"remainder\");\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [slidesToScroll, setSlidesToScroll] = useState(1);\n  const [slidesToShow, setSlidesToShow] = useState(1);\n  const [transitionMode, setTransitionMode] = useState(\"scroll\");\n  const [underlineHeader, setUnderlineHeader] = useState(false);\n  const [withoutControls, setWithoutControls] = useState(false);\n  const [wrapAround, setWrapAround] = useState(false);\n  const [zoomScale, setZoomScale] = useState(0.5);\n  const handleImageClick = useCallback(() => {\n    setUnderlineHeader(prevUnderlineHeader => !prevUnderlineHeader);\n  }, []);\n\n  const renderTopControls = currentSlide => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"Helvetica\",\n        color: \"#fff\",\n        textDecoration: underlineHeader ? \"underline\" : \"none\"\n      },\n      children: [\"Nuka Carousel: Slide \", Math.ceil(currentSlide) + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  };\n\n  const slides = colors.slice(0, length).map((color, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n    src: `https://via.placeholder.com/400/${color}/ffffff/&text=slide${index + 1}`,\n    alt: `Slide ${index + 1}`,\n    onClick: () => handleImageClick(),\n    style: {\n      height: heightMode === \"current\" ? 100 * (index + 1) : 400\n    }\n  }, color, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        animation: animation,\n        autoplay: autoplay,\n        cellAlign: cellAlign,\n        heightMode: heightMode,\n        scrollMode: scrollMode,\n        slideIndex: slideIndex,\n        slideListMargin: 0,\n        slidesToScroll: slidesToScroll,\n        slidesToShow: slidesToShow,\n        transitionMode: transitionMode,\n        withoutControls: withoutControls,\n        wrapAround: wrapAround,\n        zoomScale: Number(zoomScale || 0),\n        renderAnnounceSlideMessage: ({\n          currentSlide,\n          slideCount\n        }) => {\n          return `Showing slide ${currentSlide + 1} of ${slideCount}`;\n        },\n        renderTopCenterControls: ({\n          currentSlide\n        }) => renderTopControls(currentSlide),\n        children: slides\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CarouselConfig, \"birTixpvl6TFW36rZO6u7JAlIU8=\");\n\n_c = CarouselConfig;\nexport default CarouselConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarouselConfig\");","map":{"version":3,"sources":["/Users/ainneoum/Projects/grm-test/src/components/SectionSix/CarouselConfig.js"],"names":["React","useState","useCallback","Carousel","colors","CarouselConfig","animation","setAnimation","undefined","autoplay","setAutoplay","cellAlign","setCellAlign","heightMode","setHeightMode","length","setLength","scrollMode","setScrollMode","slideIndex","setSlideIndex","slidesToScroll","setSlidesToScroll","slidesToShow","setSlidesToShow","transitionMode","setTransitionMode","underlineHeader","setUnderlineHeader","withoutControls","setWithoutControls","wrapAround","setWrapAround","zoomScale","setZoomScale","handleImageClick","prevUnderlineHeader","renderTopControls","currentSlide","fontFamily","color","textDecoration","Math","ceil","slides","slice","map","index","height","width","margin","Number","slideCount"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Carousel from \"nuka-carousel\";\n\n// CONFIG DO NOT REMOVE\nconst colors = [\"7732bb\", \"047cc0\", \"00884b\", \"e3bc13\", \"db7c00\"];\n// eslint-disable-next-line complexity\nconst CarouselConfig = () => {\n  const [animation, setAnimation] = useState(undefined);\n  const [autoplay, setAutoplay] = useState(false);\n  const [cellAlign, setCellAlign] = useState(\"left\");\n  const [heightMode, setHeightMode] = useState(\"max\");\n  const [length, setLength] = useState(colors.length);\n  const [scrollMode, setScrollMode] = useState(\"remainder\");\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [slidesToScroll, setSlidesToScroll] = useState(1);\n  const [slidesToShow, setSlidesToShow] = useState(1);\n  const [transitionMode, setTransitionMode] = useState(\"scroll\");\n  const [underlineHeader, setUnderlineHeader] = useState(false);\n  const [withoutControls, setWithoutControls] = useState(false);\n  const [wrapAround, setWrapAround] = useState(false);\n  const [zoomScale, setZoomScale] = useState(0.5);\n\n  const handleImageClick = useCallback(() => {\n    setUnderlineHeader((prevUnderlineHeader) => !prevUnderlineHeader);\n  }, []);\n\n  const renderTopControls = (currentSlide) => {\n    return (\n      <div\n        style={{\n          fontFamily: \"Helvetica\",\n          color: \"#fff\",\n          textDecoration: underlineHeader ? \"underline\" : \"none\",\n        }}\n      >\n        Nuka Carousel: Slide {Math.ceil(currentSlide) + 1}\n      </div>\n    );\n  };\n\n  const slides = colors.slice(0, length).map((color, index) => (\n    <img\n      src={`https://via.placeholder.com/400/${color}/ffffff/&text=slide${\n        index + 1\n      }`}\n      alt={`Slide ${index + 1}`}\n      key={color}\n      onClick={() => handleImageClick()}\n      style={{\n        height: heightMode === \"current\" ? 100 * (index + 1) : 400,\n      }}\n    />\n  ));\n\n  return (\n    <>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Carousel\n          animation={animation}\n          autoplay={autoplay}\n          cellAlign={cellAlign}\n          heightMode={heightMode}\n          scrollMode={scrollMode}\n          slideIndex={slideIndex}\n          slideListMargin={0}\n          slidesToScroll={slidesToScroll}\n          slidesToShow={slidesToShow}\n          transitionMode={transitionMode}\n          withoutControls={withoutControls}\n          wrapAround={wrapAround}\n          zoomScale={Number(zoomScale || 0)}\n          renderAnnounceSlideMessage={({ currentSlide, slideCount }) => {\n            return `Showing slide ${currentSlide + 1} of ${slideCount}`;\n          }}\n          renderTopCenterControls={({ currentSlide }) =>\n            renderTopControls(currentSlide)\n          }\n        >\n          {slides}\n        </Carousel>\n      </div>\n    </>\n  );\n};\n\nexport default CarouselConfig;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ainneoum/Projects/website-21/src/components/ContactSection/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport \"./ContactStyles.css\";\nimport { useForm } from \"@formspree/react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"Required\";\n  } else if (values.name.length > 15) {\n    errors.name = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst Contact = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    },\n    validate,\n    onSubmit: (values, actions, {\n      resetForm\n    }) => {\n      //   alert(\"Thank you! Your message has been sent\");\n      //   resetForm();\n      axios({\n        method: \"POST\",\n        url: \"http://formspree.io/YOUR_FORM_ID\",\n        data: values\n      }).then(response => {\n        actions.setSubmitting(false);\n        actions.resetForm();\n        handleServerResponse(true, \"Thanks!\");\n      }).catch(error => {\n        actions.setSubmitting(false);\n        handleServerResponse(false, error.response.data.error);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      id: \"name\",\n      name: \"name\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 30\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"message\",\n      children: \"Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"message\",\n      name: \"message\",\n      rows: \"5\",\n      cols: \"30\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/ainneoum/Projects/website-21/src/components/ContactSection/index.js"],"names":["React","useFormik","useForm","axios","validate","values","errors","name","length","email","test","Contact","formik","initialValues","message","onSubmit","actions","resetForm","method","url","data","then","response","setSubmitting","handleServerResponse","catch","error","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport \"./ContactStyles.css\";\nimport { useForm } from \"@formspree/react\";\nimport axios from \"axios\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"Required\";\n  } else if (values.name.length > 15) {\n    errors.name = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst Contact = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    validate,\n    onSubmit: (values, actions, { resetForm }) => {\n      //   alert(\"Thank you! Your message has been sent\");\n      //   resetForm();\n      axios({\n        method: \"POST\",\n        url: \"http://formspree.io/YOUR_FORM_ID\",\n        data: values,\n      })\n        .then((response) => {\n          actions.setSubmitting(false);\n          actions.resetForm();\n          handleServerResponse(true, \"Thanks!\");\n        })\n        .catch((error) => {\n          actions.setSubmitting(false);\n          handleServerResponse(false, error.response.data.error);\n        });\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        required\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.name}\n      />\n      {formik.errors.name ? <div>{formik.errors.name}</div> : null}\n\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      />\n      {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n\n      <label htmlFor=\"message\">Message:</label>\n      <textarea\n        id=\"message\"\n        name=\"message\"\n        rows=\"5\"\n        cols=\"30\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.message}\n      ></textarea>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}
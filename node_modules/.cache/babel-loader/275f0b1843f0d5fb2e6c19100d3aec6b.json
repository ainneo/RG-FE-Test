{"ast":null,"code":"var _jsxFileName = \"/Users/ainneoum/Projects/grm-test/src/components/SectionSix/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport Carousel from \"nuka-carousel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = [\"7732bb\", \"047cc0\", \"00884b\", \"e3bc13\", \"db7c00\"]; // eslint-disable-next-line complexity\n\nconst App = () => {\n  _s();\n\n  const [animation, setAnimation] = useState(undefined);\n  const [autoplay, setAutoplay] = useState(false);\n  const [cellAlign, setCellAlign] = useState(\"left\");\n  const [cellSpacing, setCellSpacing] = useState(0);\n  const [heightMode, setHeightMode] = useState(\"max\");\n  const [length, setLength] = useState(colors.length);\n  const [scrollMode, setScrollMode] = useState(\"remainder\");\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [slidesToScroll, setSlidesToScroll] = useState(1);\n  const [slidesToShow, setSlidesToShow] = useState(1);\n  const [transitionMode, setTransitionMode] = useState(\"scroll\");\n  const [underlineHeader, setUnderlineHeader] = useState(false);\n  const [withoutControls, setWithoutControls] = useState(false);\n  const [wrapAround, setWrapAround] = useState(false);\n  const [zoomScale, setZoomScale] = useState(0.5);\n  const handleImageClick = useCallback(() => {\n    setUnderlineHeader(prevUnderlineHeader => !prevUnderlineHeader);\n  }, []);\n  const handleZoomScaleChange = useCallback(event => {\n    setZoomScale(event.target.value);\n  }, []);\n\n  const renderTopControls = currentSlide => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"Helvetica\",\n        color: \"#fff\",\n        textDecoration: underlineHeader ? \"underline\" : \"none\"\n      },\n      children: [\"Nuka Carousel: Slide \", Math.ceil(currentSlide) + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  const slides = colors.slice(0, length).map((color, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n    src: `https://via.placeholder.com/400/${color}/ffffff/&text=slide${index + 1}`,\n    alt: `Slide ${index + 1}`,\n    onClick: () => handleImageClick(),\n    style: {\n      height: heightMode === \"current\" ? 100 * (index + 1) : 400\n    }\n  }, color, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Nuka Carousel Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        cellSpacing: cellSpacing,\n        animation: animation,\n        autoplay: autoplay,\n        cellAlign: cellAlign,\n        heightMode: heightMode,\n        scrollMode: scrollMode,\n        slideIndex: slideIndex,\n        slideListMargin: 0,\n        slidesToScroll: slidesToScroll,\n        slidesToShow: slidesToShow,\n        transitionMode: transitionMode,\n        withoutControls: withoutControls,\n        wrapAround: wrapAround,\n        zoomScale: Number(zoomScale || 0),\n        renderAnnounceSlideMessage: ({\n          currentSlide,\n          slideCount\n        }) => {\n          return `Showing slide ${currentSlide + 1} of ${slideCount}`;\n        },\n        renderTopCenterControls: ({\n          currentSlide\n        }) => renderTopControls(currentSlide),\n        children: slides\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          margin: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: slides.map((slide, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSlideIndex(idx),\n            children: idx + 1\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), slidesToShow > 1.0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCellAlign(\"left\"),\n            children: \"Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCellAlign(\"center\"),\n            children: \"Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCellAlign(\"right\"),\n            children: \"Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\",\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          height: \"36px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLength(prevLength => prevLength === 9 ? 3 : 9),\n          children: \"Toggle Show 3 Slides Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTransitionMode(prevTransitionMode => prevTransitionMode === \"fade\" ? \"scroll\" : \"fade\"),\n          children: [\"Toggle Fade \", transitionMode === \"fade\" ? \"Off\" : \"On\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setWrapAround(prevWrapAround => !prevWrapAround),\n          children: [\"Toggle Wrap Around: \", wrapAround.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAutoplay(prevAutoPlay => !prevAutoPlay),\n          children: [\"Toggle Autoplay \", autoplay === true ? \"Off\" : \"On\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), transitionMode !== \"fade\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            height: \"36px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSlidesToShow(slidesToShow === 3 ? 1 : 3);\n              setSlidesToScroll(slidesToScroll === \"auto\" ? 1 : \"auto\");\n            },\n            children: [\"Toggle Drag Multiple\", \" \", slidesToShow > 1 && slidesToScroll === \"auto\" ? \"Off\" : \"On\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSlidesToShow(prevSlidesToShow => prevSlidesToShow > 1.0 ? 1.0 : 1.25),\n            children: \"Toggle Partially Visible Slides\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setHeightMode(prevHeightMode => prevHeightMode === \"current\" ? \"max\" : \"current\"),\n            children: [\"Toggle Height Mode: \", heightMode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\",\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [animation === \"zoom\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: zoomScale,\n            onChange: handleZoomScaleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAnimation(prevAnimation => prevAnimation === \"zoom\" ? undefined : \"zoom\");\n              setCellAlign(\"center\");\n            },\n            children: [\"Toggle Zoom Animation \", animation === \"zoom\" ? \"Off\" : \"On\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSlidesToScroll(prevSlidesToScroll => prevSlidesToScroll === 1 ? 2 : 1);\n              setCellAlign(\"center\");\n            },\n            children: [\"Toggle SlidesToScroll: \", slidesToScroll === 1 ? 2 : 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSlidesToShow(prevSlidesToShow => prevSlidesToShow >= 3.0 ? 1.0 : prevSlidesToShow + 0.25);\n            },\n            children: [\"Increase Slides to Show: \", slidesToShow]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setScrollMode(prevScrollMode => prevScrollMode === \"remainder\" ? \"page\" : \"remainder\"),\n            children: [\"Toggle ScrollMode: \", scrollMode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCellSpacing(prevCellSpacing => prevCellSpacing > 0 ? 0 : 5),\n            children: [\"Toggle Cellspacing \", cellSpacing > 0 ? \"Off\" : \"On\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"hGrI2XCz7T2RnQsgaKa3WrVWC/c=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ainneoum/Projects/grm-test/src/components/SectionSix/Carousel.js"],"names":["useState","useCallback","Carousel","colors","App","animation","setAnimation","undefined","autoplay","setAutoplay","cellAlign","setCellAlign","cellSpacing","setCellSpacing","heightMode","setHeightMode","length","setLength","scrollMode","setScrollMode","slideIndex","setSlideIndex","slidesToScroll","setSlidesToScroll","slidesToShow","setSlidesToShow","transitionMode","setTransitionMode","underlineHeader","setUnderlineHeader","withoutControls","setWithoutControls","wrapAround","setWrapAround","zoomScale","setZoomScale","handleImageClick","prevUnderlineHeader","handleZoomScaleChange","event","target","value","renderTopControls","currentSlide","fontFamily","color","textDecoration","Math","ceil","slides","slice","map","index","height","width","margin","textAlign","Number","slideCount","display","alignItems","flexDirection","slide","idx","marginBottom","justifyContent","prevLength","prevTransitionMode","prevWrapAround","toString","prevAutoPlay","prevSlidesToShow","prevHeightMode","prevAnimation","prevSlidesToScroll","prevScrollMode","prevCellSpacing"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,CAAf,C,CACA;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACO,SAAD,CAA1C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,MAAD,CAA1C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAACG,MAAM,CAACa,MAAR,CAApC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,WAAD,CAA5C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC0B,cAAD,EAAiBC,iBAAjB,IAAsC3B,QAAQ,CAAC,QAAD,CAApD;AACA,QAAM,CAAC4B,eAAD,EAAkBC,kBAAlB,IAAwC7B,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAAC8B,eAAD,EAAkBC,kBAAlB,IAAwC/B,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,GAAD,CAA1C;AAEA,QAAMoC,gBAAgB,GAAGnC,WAAW,CAAC,MAAM;AACzC4B,IAAAA,kBAAkB,CAAEQ,mBAAD,IAAyB,CAACA,mBAA3B,CAAlB;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,QAAMC,qBAAqB,GAAGrC,WAAW,CAAEsC,KAAD,IAAW;AACnDJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFwC,EAEtC,EAFsC,CAAzC;;AAIA,QAAMC,iBAAiB,GAAIC,YAAD,IAAkB;AAC1C,wBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,WADP;AAELC,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,cAAc,EAAElB,eAAe,GAAG,WAAH,GAAiB;AAH3C,OADT;AAAA,0CAOwBmB,IAAI,CAACC,IAAL,CAAUL,YAAV,IAA0B,CAPlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD;;AAcA,QAAMM,MAAM,GAAG9C,MAAM,CAAC+C,KAAP,CAAa,CAAb,EAAgBlC,MAAhB,EAAwBmC,GAAxB,CAA4B,CAACN,KAAD,EAAQO,KAAR,kBACzC;AACE,IAAA,GAAG,EAAG,mCAAkCP,KAAM,sBAC5CO,KAAK,GAAG,CACT,EAHH;AAIE,IAAA,GAAG,EAAG,SAAQA,KAAK,GAAG,CAAE,EAJ1B;AAME,IAAA,OAAO,EAAE,MAAMhB,gBAAgB,EANjC;AAOE,IAAA,KAAK,EAAE;AACLiB,MAAAA,MAAM,EAAEvC,UAAU,KAAK,SAAf,GAA2B,OAAOsC,KAAK,GAAG,CAAf,CAA3B,GAA+C;AADlD;AAPT,KAKOP,KALP;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAcA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAAZ;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,WAAW,EAAE5C,WADf;AAEE,QAAA,SAAS,EAAEP,SAFb;AAGE,QAAA,QAAQ,EAAEG,QAHZ;AAIE,QAAA,SAAS,EAAEE,SAJb;AAKE,QAAA,UAAU,EAAEI,UALd;AAME,QAAA,UAAU,EAAEI,UANd;AAOE,QAAA,UAAU,EAAEE,UAPd;AAQE,QAAA,eAAe,EAAE,CARnB;AASE,QAAA,cAAc,EAAEE,cATlB;AAUE,QAAA,YAAY,EAAEE,YAVhB;AAWE,QAAA,cAAc,EAAEE,cAXlB;AAYE,QAAA,eAAe,EAAEI,eAZnB;AAaE,QAAA,UAAU,EAAEE,UAbd;AAcE,QAAA,SAAS,EAAEyB,MAAM,CAACvB,SAAS,IAAI,CAAd,CAdnB;AAeE,QAAA,0BAA0B,EAAE,CAAC;AAAES,UAAAA,YAAF;AAAgBe,UAAAA;AAAhB,SAAD,KAAkC;AAC5D,iBAAQ,iBAAgBf,YAAY,GAAG,CAAE,OAAMe,UAAW,EAA1D;AACD,SAjBH;AAkBE,QAAA,uBAAuB,EAAE,CAAC;AAAEf,UAAAA;AAAF,SAAD,KACvBD,iBAAiB,CAACC,YAAD,CAnBrB;AAAA,kBAsBGM;AAtBH;AAAA;AAAA;AAAA;AAAA,cAFF,eA0BE;AACE,QAAA,KAAK,EAAE;AACLU,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,UAAU,EAAE,QAFP;AAGLC,UAAAA,aAAa,EAAE,QAHV;AAILN,UAAAA,MAAM,EAAE;AAJH,SADT;AAAA,gCAQE;AAAA,oBACGN,MAAM,CAACE,GAAP,CAAW,CAACW,KAAD,EAAQC,GAAR,kBACV;AAAkB,YAAA,OAAO,EAAE,MAAM1C,aAAa,CAAC0C,GAAD,CAA9C;AAAA,sBACGA,GAAG,GAAG;AADT,aAAaA,GAAb;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARF,EAeGvC,YAAY,GAAG,GAAf,iBACC;AAAA,kCACE;AAAQ,YAAA,OAAO,EAAE,MAAMb,YAAY,CAAC,MAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,QAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,OAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmDE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AACLqD,UAAAA,YAAY,EAAE,MADT;AAELL,UAAAA,OAAO,EAAE,MAFJ;AAGLM,UAAAA,cAAc,EAAE,cAHX;AAILZ,UAAAA,MAAM,EAAE;AAJH,SADT;AAAA,gCAQE;AACE,UAAA,OAAO,EAAE,MACPpC,SAAS,CAAEiD,UAAD,IAAiBA,UAAU,KAAK,CAAf,GAAmB,CAAnB,GAAuB,CAAzC,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AACE,UAAA,OAAO,EAAE,MACPvC,iBAAiB,CAAEwC,kBAAD,IAChBA,kBAAkB,KAAK,MAAvB,GAAgC,QAAhC,GAA2C,MAD5B,CAFrB;AAAA,qCAOezC,cAAc,KAAK,MAAnB,GAA4B,KAA5B,GAAoC,IAPnD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAwBE;AACE,UAAA,OAAO,EAAE,MAAMO,aAAa,CAAEmC,cAAD,IAAoB,CAACA,cAAtB,CAD9B;AAAA,6CAGuBpC,UAAU,CAACqC,QAAX,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA6BE;AAAQ,UAAA,OAAO,EAAE,MAAM5D,WAAW,CAAE6D,YAAD,IAAkB,CAACA,YAApB,CAAlC;AAAA,yCACmB9D,QAAQ,KAAK,IAAb,GAAoB,KAApB,GAA4B,IAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAmCGkB,cAAc,KAAK,MAAnB,iBACC;AAAA,gCACE;AACE,UAAA,KAAK,EAAE;AACLsC,YAAAA,YAAY,EAAE,MADT;AAELL,YAAAA,OAAO,EAAE,MAFJ;AAGLM,YAAAA,cAAc,EAAE,cAHX;AAILZ,YAAAA,MAAM,EAAE;AAJH,WADT;AAAA,kCAQE;AACE,YAAA,OAAO,EAAE,MAAM;AACb5B,cAAAA,eAAe,CAACD,YAAY,KAAK,CAAjB,GAAqB,CAArB,GAAyB,CAA1B,CAAf;AACAD,cAAAA,iBAAiB,CAACD,cAAc,KAAK,MAAnB,GAA4B,CAA5B,GAAgC,MAAjC,CAAjB;AACD,aAJH;AAAA,+CAMuB,GANvB,EAOGE,YAAY,GAAG,CAAf,IAAoBF,cAAc,KAAK,MAAvC,GAAgD,KAAhD,GAAwD,IAP3D;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAiBE;AACE,YAAA,OAAO,EAAE,MACPG,eAAe,CAAE8C,gBAAD,IACdA,gBAAgB,GAAG,GAAnB,GAAyB,GAAzB,GAA+B,IADlB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eA0BE;AACE,YAAA,OAAO,EAAE,MACPxD,aAAa,CAAEyD,cAAD,IACZA,cAAc,KAAK,SAAnB,GAA+B,KAA/B,GAAuC,SAD5B,CAFjB;AAAA,+CAOuB1D,UAPvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAqCE;AACE,UAAA,KAAK,EAAE;AACLkD,YAAAA,YAAY,EAAE,MADT;AAELL,YAAAA,OAAO,EAAE,MAFJ;AAGLM,YAAAA,cAAc,EAAE;AAHX,WADT;AAAA,qBAOG5D,SAAS,KAAK,MAAd,iBACC;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAE6B,SAFT;AAGE,YAAA,QAAQ,EAAEI;AAHZ;AAAA;AAAA;AAAA;AAAA,kBARJ,eAcE;AACE,YAAA,OAAO,EAAE,MAAM;AACbhC,cAAAA,YAAY,CAAEmE,aAAD,IACXA,aAAa,KAAK,MAAlB,GAA2BlE,SAA3B,GAAuC,MAD7B,CAAZ;AAGAI,cAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,aANH;AAAA,iDAQyBN,SAAS,KAAK,MAAd,GAAuB,KAAvB,GAA+B,IARxD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAwBE;AACE,YAAA,OAAO,EAAE,MAAM;AACbkB,cAAAA,iBAAiB,CAAEmD,kBAAD,IAChBA,kBAAkB,KAAK,CAAvB,GAA2B,CAA3B,GAA+B,CADhB,CAAjB;AAGA/D,cAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,aANH;AAAA,kDAQ0BW,cAAc,KAAK,CAAnB,GAAuB,CAAvB,GAA2B,CARrD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAkCE;AACE,YAAA,OAAO,EAAE,MAAM;AACbG,cAAAA,eAAe,CAAE8C,gBAAD,IACdA,gBAAgB,IAAI,GAApB,GAA0B,GAA1B,GAAgCA,gBAAgB,GAAG,IADtC,CAAf;AAGD,aALH;AAAA,oDAO4B/C,YAP5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCF,eA2CE;AACE,YAAA,OAAO,EAAE,MACPL,aAAa,CAAEwD,cAAD,IACZA,cAAc,KAAK,WAAnB,GAAiC,MAAjC,GAA0C,WAD/B,CAFjB;AAAA,8CAOsBzD,UAPtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3CF,eAoDE;AACE,YAAA,OAAO,EAAE,MACPL,cAAc,CAAE+D,eAAD,IACbA,eAAe,GAAG,CAAlB,GAAsB,CAAtB,GAA0B,CADd,CAFlB;AAAA,8CAOsBhE,WAAW,GAAG,CAAd,GAAkB,KAAlB,GAA0B,IAPhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBApDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCF;AAAA,sBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnDF;AAAA,kBADF;AAgMD,CArPD;;GAAMR,G;;KAAAA,G","sourcesContent":["import { useState, useCallback } from \"react\";\nimport Carousel from \"nuka-carousel\";\n\nconst colors = [\"7732bb\", \"047cc0\", \"00884b\", \"e3bc13\", \"db7c00\"];\n// eslint-disable-next-line complexity\nconst App = () => {\n  const [animation, setAnimation] = useState(undefined);\n  const [autoplay, setAutoplay] = useState(false);\n  const [cellAlign, setCellAlign] = useState(\"left\");\n  const [cellSpacing, setCellSpacing] = useState(0);\n  const [heightMode, setHeightMode] = useState(\"max\");\n  const [length, setLength] = useState(colors.length);\n  const [scrollMode, setScrollMode] = useState(\"remainder\");\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [slidesToScroll, setSlidesToScroll] = useState(1);\n  const [slidesToShow, setSlidesToShow] = useState(1);\n  const [transitionMode, setTransitionMode] = useState(\"scroll\");\n  const [underlineHeader, setUnderlineHeader] = useState(false);\n  const [withoutControls, setWithoutControls] = useState(false);\n  const [wrapAround, setWrapAround] = useState(false);\n  const [zoomScale, setZoomScale] = useState(0.5);\n\n  const handleImageClick = useCallback(() => {\n    setUnderlineHeader((prevUnderlineHeader) => !prevUnderlineHeader);\n  }, []);\n\n  const handleZoomScaleChange = useCallback((event) => {\n    setZoomScale(event.target.value);\n  }, []);\n\n  const renderTopControls = (currentSlide) => {\n    return (\n      <div\n        style={{\n          fontFamily: \"Helvetica\",\n          color: \"#fff\",\n          textDecoration: underlineHeader ? \"underline\" : \"none\",\n        }}\n      >\n        Nuka Carousel: Slide {Math.ceil(currentSlide) + 1}\n      </div>\n    );\n  };\n\n  const slides = colors.slice(0, length).map((color, index) => (\n    <img\n      src={`https://via.placeholder.com/400/${color}/ffffff/&text=slide${\n        index + 1\n      }`}\n      alt={`Slide ${index + 1}`}\n      key={color}\n      onClick={() => handleImageClick()}\n      style={{\n        height: heightMode === \"current\" ? 100 * (index + 1) : 400,\n      }}\n    />\n  ));\n\n  return (\n    <>\n      <div style={{ width: \"50%\", margin: \"auto\" }}>\n        <h2 style={{ textAlign: \"center\" }}>Nuka Carousel Demo</h2>\n        <Carousel\n          cellSpacing={cellSpacing}\n          animation={animation}\n          autoplay={autoplay}\n          cellAlign={cellAlign}\n          heightMode={heightMode}\n          scrollMode={scrollMode}\n          slideIndex={slideIndex}\n          slideListMargin={0}\n          slidesToScroll={slidesToScroll}\n          slidesToShow={slidesToShow}\n          transitionMode={transitionMode}\n          withoutControls={withoutControls}\n          wrapAround={wrapAround}\n          zoomScale={Number(zoomScale || 0)}\n          renderAnnounceSlideMessage={({ currentSlide, slideCount }) => {\n            return `Showing slide ${currentSlide + 1} of ${slideCount}`;\n          }}\n          renderTopCenterControls={({ currentSlide }) =>\n            renderTopControls(currentSlide)\n          }\n        >\n          {slides}\n        </Carousel>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            margin: \"10px 0\",\n          }}\n        >\n          <div>\n            {slides.map((slide, idx) => (\n              <button key={idx} onClick={() => setSlideIndex(idx)}>\n                {idx + 1}\n              </button>\n            ))}\n          </div>\n          {slidesToShow > 1.0 && (\n            <div>\n              <button onClick={() => setCellAlign(\"left\")}>Left</button>\n              <button onClick={() => setCellAlign(\"center\")}>Center</button>\n              <button onClick={() => setCellAlign(\"right\")}>Right</button>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"controlsWrapper\">\n        <div\n          style={{\n            marginBottom: \"10px\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            height: \"36px\",\n          }}\n        >\n          <button\n            onClick={() =>\n              setLength((prevLength) => (prevLength === 9 ? 3 : 9))\n            }\n          >\n            Toggle Show 3 Slides Only\n          </button>\n          <button\n            onClick={() =>\n              setTransitionMode((prevTransitionMode) =>\n                prevTransitionMode === \"fade\" ? \"scroll\" : \"fade\"\n              )\n            }\n          >\n            Toggle Fade {transitionMode === \"fade\" ? \"Off\" : \"On\"}\n          </button>\n          <button\n            onClick={() => setWrapAround((prevWrapAround) => !prevWrapAround)}\n          >\n            Toggle Wrap Around: {wrapAround.toString()}\n          </button>\n          <button onClick={() => setAutoplay((prevAutoPlay) => !prevAutoPlay)}>\n            Toggle Autoplay {autoplay === true ? \"Off\" : \"On\"}\n          </button>\n        </div>\n\n        {transitionMode !== \"fade\" && (\n          <>\n            <div\n              style={{\n                marginBottom: \"10px\",\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                height: \"36px\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  setSlidesToShow(slidesToShow === 3 ? 1 : 3);\n                  setSlidesToScroll(slidesToScroll === \"auto\" ? 1 : \"auto\");\n                }}\n              >\n                Toggle Drag Multiple{\" \"}\n                {slidesToShow > 1 && slidesToScroll === \"auto\" ? \"Off\" : \"On\"}\n              </button>\n              <button\n                onClick={() =>\n                  setSlidesToShow((prevSlidesToShow) =>\n                    prevSlidesToShow > 1.0 ? 1.0 : 1.25\n                  )\n                }\n              >\n                Toggle Partially Visible Slides\n              </button>\n              <button\n                onClick={() =>\n                  setHeightMode((prevHeightMode) =>\n                    prevHeightMode === \"current\" ? \"max\" : \"current\"\n                  )\n                }\n              >\n                Toggle Height Mode: {heightMode}\n              </button>\n            </div>\n            <div\n              style={{\n                marginBottom: \"10px\",\n                display: \"flex\",\n                justifyContent: \"space-around\",\n              }}\n            >\n              {animation === \"zoom\" && (\n                <input\n                  type=\"number\"\n                  value={zoomScale}\n                  onChange={handleZoomScaleChange}\n                />\n              )}\n              <button\n                onClick={() => {\n                  setAnimation((prevAnimation) =>\n                    prevAnimation === \"zoom\" ? undefined : \"zoom\"\n                  );\n                  setCellAlign(\"center\");\n                }}\n              >\n                Toggle Zoom Animation {animation === \"zoom\" ? \"Off\" : \"On\"}\n              </button>\n              <button\n                onClick={() => {\n                  setSlidesToScroll((prevSlidesToScroll) =>\n                    prevSlidesToScroll === 1 ? 2 : 1\n                  );\n                  setCellAlign(\"center\");\n                }}\n              >\n                Toggle SlidesToScroll: {slidesToScroll === 1 ? 2 : 1}\n              </button>\n              <button\n                onClick={() => {\n                  setSlidesToShow((prevSlidesToShow) =>\n                    prevSlidesToShow >= 3.0 ? 1.0 : prevSlidesToShow + 0.25\n                  );\n                }}\n              >\n                Increase Slides to Show: {slidesToShow}\n              </button>\n              <button\n                onClick={() =>\n                  setScrollMode((prevScrollMode) =>\n                    prevScrollMode === \"remainder\" ? \"page\" : \"remainder\"\n                  )\n                }\n              >\n                Toggle ScrollMode: {scrollMode}\n              </button>\n              <button\n                onClick={() =>\n                  setCellSpacing((prevCellSpacing) =>\n                    prevCellSpacing > 0 ? 0 : 5\n                  )\n                }\n              >\n                Toggle Cellspacing {cellSpacing > 0 ? \"Off\" : \"On\"}\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
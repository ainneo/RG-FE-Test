{"ast":null,"code":"var _jsxFileName = \"/Users/ainneoum/Projects/grm-test/src/components/SectionSix/CarouselConfig.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport Carousel from \"nuka-carousel\"; // CONFIG DO NOT REMOVE\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = [\"#fffff\", \"#ffffff\", \"#ffffff\"]; // eslint-disable-next-line complexity\n\nconst CarouselConfig = () => {\n  _s();\n\n  // const [animation, setAnimation] = useState(undefined);\n  // const [autoplay, setAutoplay] = useState(false);\n  // const [cellAlign, setCellAlign] = useState(\"left\");\n  // const [cellSpacing, setCellSpacing] = useState(0);\n  // const [heightMode, setHeightMode] = useState(\"max\");\n  // const [length, setLength] = useState(colors.length);\n  // const [scrollMode, setScrollMode] = useState(\"remainder\");\n  // const [slideIndex, setSlideIndex] = useState(0);\n  // const [slidesToScroll, setSlidesToScroll] = useState(1);\n  // const [slidesToShow, setSlidesToShow] = useState(1);\n  // const [transitionMode, setTransitionMode] = useState(\"scroll\");\n  const [underlineHeader, setUnderlineHeader] = useState(false); // const [withoutControls, setWithoutControls] = useState(false);\n  // const [wrapAround, setWrapAround] = useState(false);\n  // const [zoomScale, setZoomScale] = useState(0.5);\n\n  const handleImageClick = useCallback(() => {\n    setUnderlineHeader(prevUnderlineHeader => !prevUnderlineHeader);\n  }, []);\n\n  const renderTopControls = currentSlide => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"Helvetica\",\n        color: \"purple\",\n        textDecoration: underlineHeader ? \"underline\" : \"none\"\n      },\n      children: [\"Jane Doe: \", Math.ceil(currentSlide) + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  };\n\n  const slides = colors.slice(0, length).map((color, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n    src: `https://via.placeholder.com/400/${color}/ffffff/&text=slide${index + 1}`,\n    alt: `Slide ${index + 1}`,\n    onClick: () => handleImageClick(),\n    style: {\n      height: heightMode === \"current\" ? 100 * (index + 1) : 400\n    }\n  }, color, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\",\n        color: \"grey\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        renderCenterLeftControls: ({\n          previousSlide\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"none\",\n            color: \"purple\"\n          },\n          onClick: previousSlide,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-angle-left fa-2x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this),\n        renderCenterRightControls: ({\n          nextSlide\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"none\",\n            color: \"purple\"\n          },\n          onClick: nextSlide,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-angle-right fa-2x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) // animation={animation}\n        // autoplay={autoplay}\n        // cellAlign={cellAlign}\n        // heightMode={heightMode}\n        // scrollMode={scrollMode}\n        // slideIndex={slideIndex}\n        ,\n        slideListMargin: 0,\n        slidesToScroll: slidesToScroll // slidesToShow={slidesToShow}\n        // transitionMode={transitionMode}\n        // withoutControls={withoutControls}\n        // wrapAround={wrapAround}\n        // zoomScale={Number(zoomScale || 0)}\n        ,\n        renderAnnounceSlideMessage: ({\n          currentSlide,\n          slideCount\n        }) => {\n          return `Showing slide ${currentSlide + 1} of ${slideCount}`;\n        },\n        renderTopCenterControls: ({\n          currentSlide\n        }) => renderTopControls(currentSlide),\n        children: slides\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CarouselConfig, \"aPbOFzDxFOQmJysAl5isi8bLCe4=\");\n\n_c = CarouselConfig;\nexport default CarouselConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarouselConfig\");","map":{"version":3,"sources":["/Users/ainneoum/Projects/grm-test/src/components/SectionSix/CarouselConfig.js"],"names":["React","useState","useCallback","Carousel","colors","CarouselConfig","underlineHeader","setUnderlineHeader","handleImageClick","prevUnderlineHeader","renderTopControls","currentSlide","fontFamily","color","textDecoration","Math","ceil","slides","slice","length","map","index","height","heightMode","width","margin","previousSlide","background","nextSlide","slidesToScroll","slideCount"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Carousel from \"nuka-carousel\";\n\n// CONFIG DO NOT REMOVE\nconst colors = [\"#fffff\", \"#ffffff\", \"#ffffff\"];\n// eslint-disable-next-line complexity\nconst CarouselConfig = () => {\n  // const [animation, setAnimation] = useState(undefined);\n  // const [autoplay, setAutoplay] = useState(false);\n  // const [cellAlign, setCellAlign] = useState(\"left\");\n  // const [cellSpacing, setCellSpacing] = useState(0);\n  // const [heightMode, setHeightMode] = useState(\"max\");\n  // const [length, setLength] = useState(colors.length);\n  // const [scrollMode, setScrollMode] = useState(\"remainder\");\n  // const [slideIndex, setSlideIndex] = useState(0);\n  // const [slidesToScroll, setSlidesToScroll] = useState(1);\n  // const [slidesToShow, setSlidesToShow] = useState(1);\n  // const [transitionMode, setTransitionMode] = useState(\"scroll\");\n  const [underlineHeader, setUnderlineHeader] = useState(false);\n  // const [withoutControls, setWithoutControls] = useState(false);\n  // const [wrapAround, setWrapAround] = useState(false);\n  // const [zoomScale, setZoomScale] = useState(0.5);\n\n  const handleImageClick = useCallback(() => {\n    setUnderlineHeader((prevUnderlineHeader) => !prevUnderlineHeader);\n  }, []);\n\n  const renderTopControls = (currentSlide) => {\n    return (\n      <div\n        style={{\n          fontFamily: \"Helvetica\",\n          color: \"purple\",\n          textDecoration: underlineHeader ? \"underline\" : \"none\",\n        }}\n      >\n        Jane Doe: {Math.ceil(currentSlide) + 1}\n      </div>\n    );\n  };\n\n  const slides = colors.slice(0, length).map((color, index) => (\n    <img\n      src={`https://via.placeholder.com/400/${color}/ffffff/&text=slide${\n        index + 1\n      }`}\n      alt={`Slide ${index + 1}`}\n      key={color}\n      onClick={() => handleImageClick()}\n      style={{\n        height: heightMode === \"current\" ? 100 * (index + 1) : 400,\n      }}\n    />\n  ));\n\n  return (\n    <>\n      <div style={{ width: \"100%\", margin: \"auto\", color: \"grey\" }}>\n        <Carousel\n          renderCenterLeftControls={({ previousSlide }) => (\n            <div\n              style={{ background: \"none\", color: \"purple\" }}\n              onClick={previousSlide}\n            >\n              <i className=\"fa fa-angle-left fa-2x\" />\n            </div>\n          )}\n          renderCenterRightControls={({ nextSlide }) => (\n            <div\n              style={{ background: \"none\", color: \"purple\" }}\n              onClick={nextSlide}\n            >\n              <i className=\"fa fa-angle-right fa-2x\" />\n            </div>\n          )}\n          // animation={animation}\n          // autoplay={autoplay}\n          // cellAlign={cellAlign}\n          // heightMode={heightMode}\n          // scrollMode={scrollMode}\n          // slideIndex={slideIndex}\n          slideListMargin={0}\n          slidesToScroll={slidesToScroll}\n          // slidesToShow={slidesToShow}\n          // transitionMode={transitionMode}\n          // withoutControls={withoutControls}\n          // wrapAround={wrapAround}\n          // zoomScale={Number(zoomScale || 0)}\n          renderAnnounceSlideMessage={({ currentSlide, slideCount }) => {\n            return `Showing slide ${currentSlide + 1} of ${slideCount}`;\n          }}\n          renderTopCenterControls={({ currentSlide }) =>\n            renderTopControls(currentSlide)\n          }\n        >\n          {slides}\n        </Carousel>\n      </div>\n    </>\n  );\n};\n\nexport default CarouselConfig;\n"]},"metadata":{},"sourceType":"module"}
/// <reference types="react" />
import { UseSpringCarouselProps, UseSpringCarouselContextProps } from './types';
export declare function useSpringCarouselContext(): UseSpringCarouselContextProps;
export default function useSpringCarousel({ items, withLoop, draggingSlideTreshold, springConfig, shouldResizeOnWindowResize, withThumbs, enableThumbsWrapperScroll, carouselSlideAxis, thumbsSlideAxis, thumbsWrapperRef, prepareThumbsData, itemsPerSlide, initialActiveItem, initialStartingPosition, disableGestures, gutter, adjacentItemsPx, }: UseSpringCarouselProps): {
    getIsFullscreen(): boolean;
    getIsPrevItem(id: string): boolean;
    getIsNextItem(id: string): boolean;
    enterFullscreen(elementRef?: HTMLElement | undefined): void;
    exitFullscreen(): void;
    slideToNextItem(): void;
    slideToPrevItem(): void;
    getIsAnimating(): boolean;
    slideToItem(item: string | number): void;
    getIsActiveItem(id: string): boolean;
    getCurrentActiveItem(): {
        id: string;
        index: number;
    };
    useListenToCustomEvent: import("./types").UseListenToCustomEvent;
    getIsDragging(): boolean;
    carouselFragment: JSX.Element;
    thumbsFragment: JSX.Element;
};
